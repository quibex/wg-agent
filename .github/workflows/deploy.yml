name: Build and Deploy wg-agent

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'scripts/health_checker.sh'
      - '.github/workflows/script-deploy.yml'
  
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual full deployment'

jobs:
  build-and-push:
    name: Build Docker Image and Push to Docker Hub
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/wg-agent:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/wg-agent:${{ github.sha }}

  deploy-to-server:
    name: Deploy to Production Server
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Generate server certificate from CA
        env:
          CA_CERT_PEM: ${{ secrets.CA_CERT_PEM }}
          CA_KEY_PEM: ${{ secrets.CA_KEY_PEM }}
        run: |
          scp scripts/make-server-cert.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            chmod +x /tmp/make-server-cert.sh
            export CA_CERT_PEM="$CA_CERT_PEM"
            export CA_KEY_PEM="$CA_KEY_PEM"
            /tmp/make-server-cert.sh
            rm -f /tmp/make-server-cert.sh
          EOF

      - name: Deploy container
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            sudo mkdir -p /opt/wg-agent
            cd /opt/wg-agent
            docker rm -f wg-agent-container || true
            docker pull $DOCKERHUB_USERNAME/wg-agent:latest
            docker run -d \
              --name wg-agent-container \
              --restart unless-stopped \
              --network host \
              --cap-add NET_ADMIN \
              --device /dev/net/tun \
              -v /etc/wg-agent:/etc/wg-agent:ro \
              -e WG_AGENT_INTERFACE=wg0 \
              -e WG_AGENT_ADDR=0.0.0.0:7443 \
              -e WG_AGENT_HTTP_ADDR=0.0.0.0:8080 \
              -e WG_AGENT_RATE_LIMIT=10 \
              -e WG_AGENT_TLS_PRIVATE=/etc/wg-agent/key.pem \
              $DOCKERHUB_USERNAME/wg-agent:latest
            sudo sh -c "echo 'export TG_TOKEN=$TG_TOKEN' >> /etc/environment"
            sudo sh -c "echo 'export TG_CHAT_ID=$TG_CHAT_ID' >> /etc/environment"
          EOF


